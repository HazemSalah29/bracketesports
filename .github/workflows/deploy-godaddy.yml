name: Deploy to GoDaddy

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare deployment package
        run: |
          # Create deployment directory
          mkdir -p deploy/public_html
          mkdir -p deploy/public_html/api
          
          # Copy static files from public directory
          if [ -d "public" ]; then
            cp -r public/* deploy/public_html/ 2>/dev/null || true
          fi
          
          # Copy frontend public files if they exist
          if [ -d "frontend/public" ]; then
            cp -r frontend/public/* deploy/public_html/ 2>/dev/null || true
          fi
          
          # Create PHP-based API for GoDaddy shared hosting compatibility
          cat > deploy/public_html/api/index.php << 'EOF'
          <?php
          header('Content-Type: application/json');
          header('Access-Control-Allow-Origin: *');
          header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
          header('Access-Control-Allow-Headers: Content-Type, Authorization');

          // Handle preflight requests
          if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
              http_response_code(200);
              exit;
          }

          // Get the requested path
          $path = $_GET['path'] ?? '';

          // Route handling
          switch ($path) {
              case 'health':
                  echo json_encode([
                      'status' => 'OK',
                      'message' => 'BracketEsports API is running',
                      'timestamp' => date('c'),
                      'version' => '1.0.0'
                  ]);
                  break;
                  
              case 'users':
                  // Mock users data for demonstration
                  echo json_encode([
                      'success' => true,
                      'data' => [
                          [
                              'id' => 1,
                              'username' => 'pro_gamer',
                              'email' => 'pro@example.com',
                              'coins' => 1500,
                              'level' => 25
                          ],
                          [
                              'id' => 2,
                              'username' => 'esports_champ',
                              'email' => 'champ@example.com', 
                              'coins' => 2300,
                              'level' => 42
                          ]
                      ],
                      'count' => 2
                  ]);
                  break;
                  
              case 'tournaments':
                  // Mock tournaments data
                  echo json_encode([
                      'success' => true,
                      'data' => [
                          [
                              'id' => 1,
                              'name' => 'League of Legends Championship',
                              'game' => 'League of Legends',
                              'status' => 'active',
                              'participants' => 128,
                              'prize' => '$10,000'
                          ],
                          [
                              'id' => 2,
                              'name' => 'Valorant Masters',
                              'game' => 'Valorant', 
                              'status' => 'upcoming',
                              'participants' => 64,
                              'prize' => '$5,000'
                          ]
                      ],
                      'count' => 2
                  ]);
                  break;
                  
              default:
                  http_response_code(404);
                  echo json_encode([
                      'error' => 'Not Found',
                      'message' => 'API endpoint not found',
                      'path' => $path
                  ]);
                  break;
          }
          ?>
          EOF
          
          # Ensure index.html exists
          if [ ! -f "deploy/public_html/index.html" ]; then
            cat > deploy/public_html/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>BracketEsports - Loading...</title>
              <style>
                  body { margin: 0; padding: 20px; font-family: Arial, sans-serif; background: #000; color: #fff; display: flex; justify-content: center; align-items: center; min-height: 100vh; }
                  .loading { text-align: center; }
                  .spinner { border: 4px solid #333; border-top: 4px solid #007bff; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 0 auto 20px; }
                  @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
              </style>
          </head>
          <body>
              <div class="loading">
                  <div class="spinner"></div>
                  <h1>BracketEsports</h1>
                  <p>Loading your esports platform...</p>
              </div>
              <div id="__next"></div>
              <script>
                  setTimeout(() => {
                      if (window.location.pathname === '/') {
                          window.location.reload();
                      }
                  }, 2000);
              </script>
          </body>
          </html>
          EOF
          fi
          
          # Create .htaccess for proper routing and PHP API
          cat > deploy/public_html/.htaccess << 'EOF'
          # Enable gzip compression
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/plain
              AddOutputFilterByType DEFLATE text/html
              AddOutputFilterByType DEFLATE text/xml
              AddOutputFilterByType DEFLATE text/css
              AddOutputFilterByType DEFLATE application/xml
              AddOutputFilterByType DEFLATE application/xhtml+xml
              AddOutputFilterByType DEFLATE application/rss+xml
              AddOutputFilterByType DEFLATE application/javascript
              AddOutputFilterByType DEFLATE application/x-javascript
              AddOutputFilterByType DEFLATE application/json
          </IfModule>

          # Security headers
          <IfModule mod_headers.c>
              Header always set X-Content-Type-Options nosniff
              Header always set X-Frame-Options DENY
              Header always set X-XSS-Protection "1; mode=block"
              Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
              Header always set Access-Control-Allow-Origin "*"
              Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
              Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
          </IfModule>

          RewriteEngine On

          # API routing - Route /api/* to PHP script
          RewriteRule ^api/(.*)$ /api/index.php?path=$1 [L,QSA]

          # Next.js static files
          RewriteRule ^_next/(.*)$ /_next/$1 [L]

          # Handle Next.js dynamic routes and SPA routing
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_URI} !^/api/
          RewriteRule ^(.*)$ /index.html [L]

          # Cache static assets
          <IfModule mod_expires.c>
              ExpiresActive On
              ExpiresByType text/css "access plus 1 year"
              ExpiresByType application/javascript "access plus 1 year"
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/jpg "access plus 1 year"
              ExpiresByType image/jpeg "access plus 1 year"
              ExpiresByType image/gif "access plus 1 year"
              ExpiresByType image/svg+xml "access plus 1 year"
              ExpiresByType application/json "access plus 1 hour"
          </IfModule>

          # Error pages
          ErrorDocument 404 /index.html
          ErrorDocument 500 /index.html
          EOF

      - name: Deploy to GoDaddy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: deploy/public_html/
          server-dir: public_html/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
            **/.env.*
